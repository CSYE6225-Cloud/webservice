name: deployment

on:
  workflow_dispatch
#  pull_request:
#    branches: [main]
#    types: [closed]

env:
  ARTIFACT_NAME: csye6225-webapp-${{ github.sha }}.zip
  CODEDEPLOY_APPLICATION_NAME: csye6225-webapp
  CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME: csye6225-webapp-deployment
  AWS_REGION: us-east-1

jobs:
  build-AMI:
#    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    # Config web service
    - name: Run build script
      env:
        AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      run: |
        ./.github/scripts/setup.sh
      shell: bash

    # Build AMI with Packer
    - name: Set packer version
      uses: hashicorp-contrib/setup-packer@v1
      with:
        packer-version: 1.7.10

    - name: Packer build
      env:
        PACKER_LOG: 1
      run: |
        packer build --var-file=ami.pkrvars.hcl ami.pkr.hcl

  codedeploy:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: Package artifact
      run: mvn --batch-mode package

    - name: Zip the artifacts
      run: |
        mkdir codedeploy_artifact
        chmod +x codedeploy/*.sh
        tmp=$(mktemp)
        jq '.logs.logs_collected.files.collect_list[0].log_stream_name = "webapp-${{ github.sha }}"' amazon-cloudwatch-agent.json \
          > "$tmp" \
          && mv "$tmp" amazon-cloudwatch-agent.json
        zip -r ${{ env.ARTIFACT_NAME }} target/webapp-0.0.1-SNAPSHOT.jar appspec.yml codedeploy/*.sh amazon-cloudwatch-agent.json
        mv ${{ env.ARTIFACT_NAME }} codedeploy_artifact/
        cd codedeploy_artifact
        ls -al

    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.GH_ACTION_AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.GH_ACTION_AWS_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Sync artifacts with S3 bucket
      run: |
        aws s3 sync ./codedeploy_artifact s3://${{ secrets.S3_BUCKET_NAME }}

    - name: Codedeploy
      run: |
        output=$(aws deploy create-deployment \
           --application-name ${{ env.CODEDEPLOY_APPLICATION_NAME }} \
           --deployment-config-name CodeDeployDefault.AllAtOnce \
           --deployment-group-name ${{ env.CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME }} \
           --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},bundleType=zip,key=${{ env.ARTIFACT_NAME }})
        echo $output

        dId=$(echo $output | jq -r '.deploymentId')
        echo $dId

        aws deploy wait deployment-successful --deployment-id $dId
